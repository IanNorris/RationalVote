@model IEnumerable<RationalVote.Models.Debate>
@{
	Layout = "~/Views/Debate/_DebateLayout.cshtml";
	
	ViewBag.Breadcrumbs = new List<KeyValuePair<string, string>>()
	{
		new KeyValuePair<string, string>( "Debates", Url.Action( "Popular", "Debate" ) )
		
		//TODO: set this to the parent, could also be a tag or search term
		//new KeyValuePair<string, string>( Model.Title, Url.Action( "Index", "Debate", new { Id = Model.Id } ) )
	};
}

@{
	int BoxWidth = 12;
	int SideBarWidth = 1;
	BoxWidth = BoxWidth - SideBarWidth;
}

@if( Model.Count() > 0 )
{
	foreach( var debate in Model )
	{
		<div class="row">
			<div class="col-md-@SideBarWidth">
				<div class="DebateVoteCounter">
					<div class="counters" title="@debate.WeightFor votes for, @debate.WeightAgainst votes against.">
						<span class="counter-icon">

							<i class="fa fa-thumbs-up rounded"></i>
						</span>
						<span class="counter">@(debate.WeightFor - debate.WeightAgainst)</span>
					</div>
				</div>
			</div>
			<div class="col-md-@BoxWidth">
				@Html.Partial( "_DebateBlockInline", debate )
			</div>
		</div>
	}
}
else
{
	<div class="alert alert-success">
		<h4>That's all there is!</h4>
		<text>Unfortunately we have no more content left to show you!</text>
	</div>
}

<ul class="pager">
	<ul class="pager">
		@if( ViewBag.PreviousIndex != null )
		{
			<li>@Html.ActionLink( "Previous", ViewContext.RouteData.Values["action"] as String, ViewContext.RouteData.Values["controller"] as String, new { start = ViewBag.PreviousIndex }, null )</li>
		}
		@if( ViewBag.NextIndex - ViewBag.Offset >= Debate.MaxPerPage )
		{
			<li>@Html.ActionLink( "Next", ViewContext.RouteData.Values[ "action" ] as String, ViewContext.RouteData.Values[ "controller" ] as String, new { start = ViewBag.NextIndex }, null )</li>
		}
	</ul>
</ul>