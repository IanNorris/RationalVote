@model Debate

@{
	var arguments = Model.Children();
	long scoreFor = 0;
	long scoreAgainst = 0;
	
	foreach( var argument in arguments )
	{
		if( argument.Type == DebateLink.LinkType.For )
		{
			scoreFor += Math.Max( argument.Weight, 0 );
		}
		else if( argument.Type == DebateLink.LinkType.Against )
		{
			scoreAgainst += Math.Max( argument.Weight, 0 );
		}
	}
}

<div class="panel Debate@(Model.Validity().ToString())">
	<div class="DebateHeading panel-heading"><h3 class="panel-title"><i class="fa fa-@Model.StatusIcon()"></i> [@Model.StatusName().ToUpper()] @Model.Title</h3></div>
	<div class="panel-body">
		<div class="headline"><h4><span class="label label-success" title="There are @scoreFor votes for this proposition">@scoreFor</span> Arguments for</h4></div>

		@foreach( var forArg in arguments )
		{
			if( forArg.Type == DebateLink.LinkType.For )
			{
				@Html.Partial( "_DebateBlockChild", forArg )
			}
		}

		<div id="new-for-content"></div>

		<div class="row">
			<div class="col-md-11 col-md-offset-1">
				<br />
				$for_input
			</div>
		</div>

		<p><br /></p>

		<div class="headline"><h4><span class="label label-danger" title="There are @scoreAgainst votes against this proposition">@scoreAgainst</span> Arguments against</h4></div>

		@foreach( var againstArg in arguments )
		{
			if( againstArg.Type == DebateLink.LinkType.Against )
			{
				@Html.Partial( "_DebateBlockChild", againstArg )
			}
		}

		<div id="new-against-content"></div>

		<div class="row">
			<div class="col-md-11 col-md-offset-1">
				<br />
				$against_input
			</div>
		</div>

		<p><br /></p>

		<div class="row">
			<div class="col-md-7">
				$tags_block
			</div>
			<div class="col-md-5" style="text-align: right">
				<h5>@Html.Partial( "_Author", RationalVote.Models.Profile.GetFromUser( Model.Owner_Id ) )</h5>
			</div>
		</div>
	</div>
</div>