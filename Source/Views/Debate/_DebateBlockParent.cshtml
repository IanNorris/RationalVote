@model Debate

@{
	var arguments = Model.Children( Context.User.Identity.IsAuthenticated ? ( (RationalVote.Models.UserPrincipal)Context.User ).User.Id : 0 );
	
	var voteSplit = RationalVote.Models.VoteSplit.Get( Model.Id );
}

<div class="panel Debate@(Model.Validity().ToString())" title="@Model.ValidityExplanation()">
	<div class="DebateHeading panel-heading"><h3 class="panel-title"><i class="fa fa-@Model.StatusIcon()"></i> [@Model.StatusName().ToUpper()] @Model.Title</h3></div>
	@Html.Partial( "_VoteSplit", voteSplit )
	<div class="panel-body">
		<div class="headline"><h4><span class="label label-success" title="There are @Model.WeightFor votes for this proposition">@Model.WeightFor</span> votes for</h4></div>

		@foreach( var forArg in arguments )
		{
			if( forArg.Type == DebateLink.LinkType.For )
			{
				@Html.Partial( "_DebateBlockLink", forArg )
			}
		}

		<div id="new-for-content"></div>

		<div class="row">
			<div class="col-md-11 col-md-offset-1">
				<br />
				@Html.Partial( "_DebateBlockResponse", new DebateResponse( DebateLink.LinkType.For, Model.Id ) )
			</div>
		</div>

		<p><br /></p>

		<div class="headline"><h4><span class="label label-danger" title="There are @Model.WeightAgainst votes against this proposition">@Model.WeightAgainst</span> votes against</h4></div>

		@foreach( var againstArg in arguments )
		{
			if( againstArg.Type == DebateLink.LinkType.Against )
			{
				@Html.Partial( "_DebateBlockLink", againstArg )
			}
		}

		<div id="new-against-content"></div>

		<div class="row">
			<div class="col-md-11 col-md-offset-1">
				<br />
				@Html.Partial( "_DebateBlockResponse", new DebateResponse( DebateLink.LinkType.Against, Model.Id ) )
			</div>
		</div>

		<p><br /></p>

		<div class="row">
			<div class="col-md-7">
				@*$tags_block*@
			</div>
			<div class="col-md-5" style="text-align: right">
				@Html.Partial( "_Author", RationalVote.Models.Profile.GetFromUser( Model.Owner ), new ViewDataDictionary() )
			</div>
		</div>
	</div>
</div>